import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
    await page.goto('https://chairbearlearning.github.io/projects/live-demos');
    await expect(page.getByText('RSVP Browser App')).toBeVisible();
    await expect(page.getByText('RSVP Browser App What is this')).toBeVisible();
    await expect(page.locator('#rsvp')).toContainText('RSVP Browser App');
    await expect(page.locator('#rsvp')).toContainText('What is this project?');
    await expect(page.locator('#rsvp')).toContainText('Features:');
    await expect(page.locator('#rsvp')).toContainText('"Invite" someone');
    await expect(page.locator('#rsvp')).toContainText('Check "confirmed" if the person responded');
    await expect(page.locator('#rsvp')).toContainText('Filtering: Hide unresponded Show only unresponded');
    await expect(page.locator('#rsvp')).toContainText('Edit the invitee');
    await expect(page.locator('#rsvp')).toContainText('Remove the invitee');
    await expect(page.locator('#rsvp')).toContainText('Download the invitees and their responses: In CSV format In TXT format');
    await expect(page.locator('#rsvp')).toContainText('How to use?');
    await expect(page.locator('#rsvp')).toContainText('Type an invitee name in the input and submit for it to be showed in the invitee list. Use the provided buttons to edit, delete and download the invitees. Use the \'Responded\' checkboxes to filter the invitee list.');
    await expect(page.locator('div').filter({ hasText: 'RSVP A RSVP Application' }).nth(2)).toBeVisible();
    await expect(page.getByRole('heading', { name: 'RSVP', exact: true })).toBeVisible();
    await expect(page.locator('h2')).toContainText('Invitees');
    await expect(page.locator('#rsvp')).toContainText('Show Unresponded Only');
    await expect(page.locator('#rsvp')).toContainText('Hide Unresponded');
    await expect(page.locator('button[name="submit"]')).toContainText('Submit');
    await expect(page.locator('#registrar')).toContainText('Download CSV');
    await expect(page.locator('#registrar')).toContainText('Download Text File');
    await page.getByRole('textbox', { name: 'Invite Someone' }).click();
    await page.getByRole('textbox', { name: 'Invite Someone' }).fill('Jason');
    await page.getByRole('button', { name: 'Submit' }).click();
    await page.getByRole('textbox', { name: 'Invite Someone' }).click();
    await page.getByRole('textbox', { name: 'Invite Someone' }).fill('Marquee');
    await page.getByRole('button', { name: 'Submit' }).click();
    await expect(page.getByText('JasonConfirmedEditRemove')).toBeVisible();
    await expect(page.getByText('MarqueeConfirmedEditRemove')).toBeVisible();
    await expect(page.locator('#invitedList')).toContainText('Marquee');
    await expect(page.locator('#invitedList')).toContainText('Confirmed');
    await expect(page.locator('#invitedList')).toContainText('Edit');
    await expect(page.locator('#invitedList')).toContainText('Remove');
    await expect(page.locator('#invitedList')).toContainText('JasonConfirmedEditRemove');
    await expect(page.locator('#invitedList')).toContainText('Jason');
    await expect(page.locator('#invitedList')).toContainText('Confirmed');
    await expect(page.locator('#invitedList')).toContainText('Edit');
    await expect(page.locator('#invitedList')).toContainText('Remove');
    await page.getByRole('listitem').filter({ hasText: 'JasonConfirmedEditRemove' }).getByLabel('Confirmed').check();
    await page.locator('div').filter({ hasText: /^Show Unresponded Only$/ }).getByRole('checkbox').check();
    await expect(page.getByText('MarqueeConfirmedEditRemove')).toBeVisible();
    await page.locator('div').filter({ hasText: /^Show Unresponded Only$/ }).getByRole('checkbox').uncheck();
    await expect(page.getByText('JasonConfirmedEditRemove')).toBeVisible();
    await expect(page.getByText('MarqueeConfirmedEditRemove')).toBeVisible();
    await page.locator('div').filter({ hasText: /^Hide Unresponded$/ }).getByRole('checkbox').check();
    await expect(page.getByText('JasonConfirmedEditRemove')).toBeVisible();
    await page.locator('div').filter({ hasText: /^Hide Unresponded$/ }).getByRole('checkbox').uncheck();
    await page.getByRole('button', { name: 'Edit' }).first().click();
    await page.locator('#invitedList').getByRole('textbox').click();
    await page.locator('#invitedList').getByRole('textbox').fill('JasonAmended');
    await page.getByRole('button', { name: 'Save' }).click();
    await expect(page.locator('#invitedList')).toContainText('JasonAmended');
    await page.getByRole('button', { name: 'Remove' }).first().click();
    await expect(page.getByText('MarqueeConfirmedEditRemove')).toBeVisible();
    await expect(page.locator('#invitedList')).toContainText('Marquee');
    await page.getByText('Invitees Hide UnrespondedShow').click();
});
